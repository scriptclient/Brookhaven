-- ESP Name Display System - Sem GUI
-- Detecta automaticamente jogadores usando o mesmo código
-- Pressione 'P' para ativar/desativar

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local LocalPlayer = Players.LocalPlayer

-- Configurações do ESP
local ESP_CONFIG = {
    ESP_ID = "ESP_CODE_2024_BR", -- ID único do código
    MaxDistance = 1000,
    UpdateRate = 0.1, -- Atualização a cada 0.1 segundos
    TextSize = 14,
    BoxColor = Color3.fromRGB(0, 255, 0),
    TextColor = Color3.fromRGB(255, 255, 255),
    BackgroundColor = Color3.fromRGB(0, 0, 0),
    Transparency = 0.2,
    FadeDistance = 200, -- Distância para começar a fade
    ToggleKey = Enum.KeyCode.P -- Tecla para ativar/desativar
}

-- Variáveis globais
local ESPObjects = {}
local ESPEnabled = false
local UpdateConnection = nil
local LastUpdate = 0

-- Lista simulada de usuários com o mesmo código (em um caso real, isso viria de um servidor)
local UsersWithCode = {}

-- Função para verificar se um jogador tem o mesmo código
local function PlayerHasCode(player)
    -- Simula verificação de código - em um caso real você faria:
    -- - Verificação via RemoteEvent
    -- - Checagem de valor no leaderstats
    -- - Sistema de identificação próprio
    
    -- Para demonstração, vamos simular que alguns players têm o código
    local playerData = UsersWithCode[player.Name]
    if not playerData then
        -- Simula chance de 60% de ter o código
        local hasCode = math.random(1, 100) <= 60
        UsersWithCode[player.Name] = {
            HasCode = hasCode,
            DetectedAt = tick(),
            LastSeen = tick()
        }
        return hasCode
    else
        playerData.LastSeen = tick()
        return playerData.HasCode
    end
end

-- Função para criar ESP em um jogador
local function CreateESP(player)
    if player == LocalPlayer then return end
    if ESPObjects[player] then return end
    if not PlayerHasCode(player) then return end
    
    local character = player.Character
    if not character then return end
    
    local humanoid = character:FindFirstChild("Humanoid")
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    
    if not humanoid or not rootPart then return end
    
    -- Criar BillboardGui
    local billboardGui = Instance.new("BillboardGui")
    billboardGui.Name = "ESP_" .. player.Name
    billboardGui.Adornee = rootPart
    billboardGui.Size = UDim2.new(0, 180, 0, 80)
    billboardGui.StudsOffset = Vector3.new(0, 3, 0)
    billboardGui.AlwaysOnTop = true
    billboardGui.Parent = rootPart
    
    -- Frame principal do ESP
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(1, 0, 1, 0)
    mainFrame.BackgroundColor3 = ESP_CONFIG.BackgroundColor
    mainFrame.BackgroundTransparency = ESP_CONFIG.Transparency
    mainFrame.BorderSizePixel = 1
    mainFrame.BorderColor3 = ESP_CONFIG.BoxColor
    mainFrame.Parent = billboardGui
    
    -- Efeito de glow na borda
    local glowFrame = Instance.new("Frame")
    glowFrame.Size = UDim2.new(1, 4, 1, 4)
    glowFrame.Position = UDim2.new(0, -2, 0, -2)
    glowFrame.BackgroundTransparency = 0.8
    glowFrame.BackgroundColor3 = ESP_CONFIG.BoxColor
    glowFrame.BorderSizePixel = 0
    glowFrame.ZIndex = -1
    glowFrame.Parent = mainFrame
    
    -- Nome do jogador
    local nameLabel = Instance.new("TextLabel")
    nameLabel.Name = "NameLabel"
    nameLabel.Size = UDim2.new(1, 0, 0.4, 0)
    nameLabel.Position = UDim2.new(0, 0, 0, 0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.TextColor3 = ESP_CONFIG.TextColor
    nameLabel.Font = Enum.Font.SourceCodePro
    nameLabel.TextSize = ESP_CONFIG.TextSize
    nameLabel.Text = player.Name
    nameLabel.TextStrokeTransparency = 0
    nameLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
    nameLabel.TextScaled = true
    nameLabel.Parent = mainFrame
    
    -- Status do código
    local codeLabel = Instance.new("TextLabel")
    codeLabel.Name = "CodeLabel"
    codeLabel.Size = UDim2.new(1, 0, 0.3, 0)
    codeLabel.Position = UDim2.new(0, 0, 0.4, 0)
    codeLabel.BackgroundTransparency = 1
    codeLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
    codeLabel.Font = Enum.Font.SourceCodePro
    codeLabel.TextSize = 10
    codeLabel.Text = "[CÓDIGO ATIVO]"
    codeLabel.TextStrokeTransparency = 0
    codeLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
    codeLabel.Parent = mainFrame
    
    -- Distância e health
    local infoLabel = Instance.new("TextLabel")
    infoLabel.Name = "InfoLabel"
    infoLabel.Size = UDim2.new(1, 0, 0.3, 0)
    infoLabel.Position = UDim2.new(0, 0, 0.7, 0)
    infoLabel.BackgroundTransparency = 1
    infoLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
    infoLabel.Font = Enum.Font.SourceCodePro
    infoLabel.TextSize = 9
    infoLabel.Text = "0m | 100HP"
    infoLabel.TextStrokeTransparency = 0
    infoLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
    infoLabel.Parent = mainFrame
    
    -- Armazenar objetos
    ESPObjects[player] = {
        BillboardGui = billboardGui,
        MainFrame = mainFrame,
        GlowFrame = glowFrame,
        NameLabel = nameLabel,
        CodeLabel = codeLabel,
        InfoLabel = infoLabel,
        Character = character,
        RootPart = rootPart,
        Humanoid = humanoid,
        CreatedAt = tick()
    }
    
    -- Animação de entrada
    mainFrame.Size = UDim2.new(0, 0, 0, 0)
    local tween = TweenService:Create(
        mainFrame,
        TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
        {Size = UDim2.new(1, 0, 1, 0)}
    )
    tween:Play()
    
    print("ESP ativado para: " .. player.Name .. " [CÓDIGO DETECTADO]")
end

-- Função para atualizar ESP
local function UpdateESP()
    if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return
    end
    
    local playerPos = LocalPlayer.Character.HumanoidRootPart.Position
    local currentTime = tick()
    
    for player, espData in pairs(ESPObjects) do
        if player.Character and espData.RootPart and espData.RootPart.Parent then
            -- Calcular distância
            local distance = (playerPos - espData.RootPart.Position).Magnitude
            
            -- Atualizar informações
            local health = math.floor(espData.Humanoid.Health)
            espData.InfoLabel.Text = math.floor(distance) .. "m | " .. health .. "HP"
            
            -- Mudar cor baseado na health
            local healthPercent = espData.Humanoid.Health / espData.Humanoid.MaxHealth
            if healthPercent > 0.7 then
                espData.InfoLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
            elseif healthPercent > 0.3 then
                espData.InfoLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            else
                espData.InfoLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
            end
            
            -- Fade baseado na distância
            local alpha = 1
            if distance > ESP_CONFIG.FadeDistance then
                alpha = math.max(0.2, 1 - (distance - ESP_CONFIG.FadeDistance) / ESP_CONFIG.FadeDistance)
            end
            
            espData.BillboardGui.Enabled = distance <= ESP_CONFIG.MaxDistance
            
            if espData.BillboardGui.Enabled then
                espData.MainFrame.BackgroundTransparency = ESP_CONFIG.Transparency + (1 - alpha) * 0.5
                espData.NameLabel.TextTransparency = (1 - alpha) * 0.3
                espData.CodeLabel.TextTransparency = (1 - alpha) * 0.3
                espData.InfoLabel.TextTransparency = (1 - alpha) * 0.3
            end
            
            -- Animação de pulse no código
            local pulseIntensity = 0.3 + 0.7 * (0.5 + 0.5 * math.sin(currentTime * 3))
            espData.CodeLabel.TextColor3 = Color3.fromRGB(0, math.floor(255 * pulseIntensity), 0)
            
        else
            -- Remover ESP se personagem não existe mais
            RemoveESP(player)
        end
    end
end

-- Função para remover ESP
function RemoveESP(player)
    if ESPObjects[player] then
        -- Animação de saída
        local espData = ESPObjects[player]
        if espData.MainFrame then
            local tween = TweenService:Create(
                espData.MainFrame,
                TweenInfo.new(0.2, Enum.EasingStyle.Back, Enum.EasingDirection.In),
                {Size = UDim2.new(0, 0, 0, 0)}
            )
            tween:Play()
            
            tween.Completed:Connect(function()
                if espData.BillboardGui then
                    espData.BillboardGui:Destroy()
                end
            end)
        end
        
        ESPObjects[player] = nil
        print("ESP removido de: " .. player.Name)
    end
end

-- Função para limpar todos os ESPs
local function ClearAllESP()
    for player, _ in pairs(ESPObjects) do
        RemoveESP(player)
    end
    ESPObjects = {}
end

-- Função para ativar/desativar ESP
local function ToggleESP()
    ESPEnabled = not ESPEnabled
    
    if ESPEnabled then
        print("🟢 ESP ATIVADO - Código: " .. ESP_CONFIG.ESP_ID)
        print("Procurando por jogadores com o mesmo código...")
        
        -- Criar ESP para todos os jogadores válidos
        for _, player in pairs(Players:GetPlayers()) do
            if player.Character then
                CreateESP(player)
            end
        end
        
        -- Iniciar loop de atualização
        UpdateConnection = RunService.Heartbeat:Connect(function()
            local currentTime = tick()
            if currentTime - LastUpdate >= ESP_CONFIG.UpdateRate then
                UpdateESP()
                LastUpdate = currentTime
            end
        end)
        
    else
        print("🔴 ESP DESATIVADO")
        
        -- Parar atualização
        if UpdateConnection then
            UpdateConnection:Disconnect()
            UpdateConnection = nil
        end
        
        -- Limpar todos os ESPs
        ClearAllESP()
    end
end

-- Função para verificar novos jogadores periodicamente
local function CheckForNewPlayers()
    if not ESPEnabled then return end
    
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and not ESPObjects[player] and player.Character then
            CreateESP(player)
        end
    end
end

-- Eventos
Players.PlayerAdded:Connect(function(player)
    if ESPEnabled then
        player.CharacterAdded:Connect(function()
            wait(2) -- Aguardar carregar completamente
            CreateESP(player)
        end)
    end
end)

Players.PlayerRemoving:Connect(function(player)
    RemoveESP(player)
    if UsersWithCode[player.Name] then
        UsersWithCode[player.Name] = nil
    end
end)

-- Input para ativar/desativar
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == ESP_CONFIG.ToggleKey then
        ToggleESP()
    end
end)

-- Verificação periódica de novos jogadores
spawn(function()
    while true do
        wait(3)
        CheckForNewPlayers()
        
        -- Limpar dados antigos de usuários
        local currentTime = tick()
        for playerName, data in pairs(UsersWithCode) do
            if currentTime - data.LastSeen > 300 then -- 5 minutos
                UsersWithCode[playerName] = nil
            end
        end
    end
end)

-- Verificação de personagens recarregados
spawn(function()
    while true do
        wait(1)
        if ESPEnabled then
            for player, espData in pairs(ESPObjects) do
                if player.Character ~= espData.Character then
                    RemoveESP(player)
                    if player.Character then
                        CreateESP(player)
                    end
                end
            end
        end
    end
end)

-- Inicialização
print("═══════════════════════════════════")
print("ESP Name Detection System Carregado!")
print("Código ID: " .. ESP_CONFIG.ESP_ID)
print("Pressione 'P' para ativar/desativar")
print("═══════════════════════════════════")

-- Auto-ativar após 2 segundos
wait(2)
ToggleESP()
